{
  "name": "dpd-fileupload",
  "description": "File uploader for Deployd",
  "version": "0.0.8",
  "author": {
    "name": "Nicolas Ritouet",
    "email": "nicolas@ritouet.com"
  },
  "dependencies": {
    "formidable": "~1.0.14",
    "debug": "~0.7.4"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/NicolasRitouet/dpd-fileupload.git"
  },
  "engines": {
    "node": "~0.8"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/NicolasRitouet/dpd-fileupload/issues"
  },
  "homepage": "https://github.com/NicolasRitouet/dpd-fileupload",
  "main": "index.js",
  "readme": "File uploader Module for Deployd [![NPM](https://nodei.co/npm/dpd-fileupload.png?compact=true)](https://npmjs.org/package/dpd-fileupload/)\n=========================\n[A working demo is available.](https://github.com/NicolasRitouet/dpd-fileupload-demo)\n\n## Description\nThis module provides functionnality to upload files within Deployd.\nThe uploaded files will be stored in the public folder of Deployd and the filenames will be stored in a collection.\n\nDon't hesitate to [fill an issue](https://github.com/NicolasRitouet/dpd-fileupload/issues/new) if you find a bug or need a feature.\n\n## Installation\n\nGo to the base directory of your Deployd project and enter:\n\n```shell\n$ npm install dpd-fileupload --save\n```\n\nOnce installed, you can add a resource of type fileupload in the dashboard.\n![Installaton](https://raw2.github.com/NicolasRitouet/nicolasritouet.github.io/master/images/dashboard-choose-resource.png)\n\n## Configuration\nBy default, the module will create a folder called \"upload\" inside the public directory. You can then access your files by calling: http://localhost:2403/upload/filename.extension\n![Directory structure](https://raw2.github.com/NicolasRitouet/nicolasritouet.github.io/master/images/directory-structure.png)\n\nIf you need to, you can change the name of the directory in the dashboard under CONFIG.\n![Configuration](https://raw2.github.com/NicolasRitouet/nicolasritouet.github.io/master/images/dashboard-config.png)\n\n## Usage\n### Upload a file (or multiple files)\nMethod POST or PUT (set content type to \"multipart/form-data\"), send \"subdir\" as request param to save the file in a sub directory.\nAny request parameter sent will be stored in the resource object.\n\nWorking demo available here: https://github.com/NicolasRitouet/dpd-fileupload-demo\n\nResponse of a successful upload:\n```\n[{\n\tfilename: 'screenshot.png',\n    subdir: \"images\",\n    creationDate: 1389946339569,\n    id: '2f4c752310e2bbae',\n    optionalParam:'foobar'\n}, {\n\tfilename: 'screenshot (1).png',\n    subdir: \"images\",\n    creationDate: 1389946339233,\n    id: 'ef43f52310e2bbae',\n    optionalParam:'foobar'\n}, ...]\n```\n\n### Get the list of files\nMethod GET\n\n```js\ndpd.fileupload.get(function(err, result) {\n    console.log(result);\n});\n```\nThe response:\n```\n[{\n\tfilename: 'screenshot.png',\n    subdir: \"images\",\n    creationDate: 1389946339569,\n    id: '2f4c752310e2bbae',\n    optionalParam:'foobar'\n}, {\n\tfilename: 'screenshot (1).png',\n    subdir: \"images\",\n    creationDate: 1389946339233,\n    id: 'ef43f52310e2bbae',\n    optionalParam:'foobar'\n}, ...]\n```\n\n### Get one file\nSince we upload the files into the /public folder, you can access your files like this:\nhttp://localhost:2403/upload/subdir/filename.extension\nreplace:\n- \"upload\" by the folder your set in the dashboard\n- \"subdir\" by the value you set for subdir. (nothing if you haven't given a subdir param)\n- \"filename.extension\" by the name of the file your uploaded\n\nIf you would like more security and some rights management to get the files, [fill an issue](https://github.com/NicolasRitouet/dpd-fileupload/issues/new) about this and I might work on this feature.\n\n\n### Remove a file from filesystem and from collection\nMethod DELETE\n\n```js\n    dpd.fileupload.delete(id, function(err, result) {\n        if (err) alert(err);\n        console.log(result);\n    });\n```\n\n\n## Changelog\n- [0.0.8](https://github.com/NicolasRitouet/dpd-fileupload/releases/tag/0.0.8)\n    - any parameter send in the query will be stored in the resource (and parse a JSON text to produce an object or array)\n    - if a parameter property name is \"subdir\", file will be placed under this subdir in the upload directory\n- [0.0.7](https://github.com/NicolasRitouet/dpd-fileupload/releases/tag/0.0.7)\n    - fix empty response issue\n- [0.0.6](https://github.com/NicolasRitouet/dpd-fileupload/releases/tag/0.0.6)\n- [0.0.5](https://github.com/NicolasRitouet/dpd-fileupload/releases/tag/0.0.5)\n\nTodo\n----\n- add tests\n- [improve demo](https://github.com/NicolasRitouet/dpd-fileupload-demo) (add implementation with angularJS, send a param in the query)\n- check if file already exist (upload anyway and put a (1) in the filename or return an error?)\n- Find a cleaner way to get the path of the upload directory\n- Implement GET of one file (stream file ?)\n",
  "readmeFilename": "README.md",
  "_id": "dpd-fileupload@0.0.8",
  "_from": "dpd-fileupload@"
}
